#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinalProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PlayersDatabase")]
	public partial class LinqToSqlConnectionClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertplayers_statistic(players_statistic instance);
    partial void Updateplayers_statistic(players_statistic instance);
    partial void Deleteplayers_statistic(players_statistic instance);
    #endregion
		
		public LinqToSqlConnectionClassDataContext() : 
				base(global::FinalProject.Properties.Settings.Default.PlayersDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlConnectionClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlConnectionClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlConnectionClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlConnectionClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<players_statistic> players_statistics
		{
			get
			{
				return this.GetTable<players_statistic>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.players_statistic")]
	public partial class players_statistic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _player_id;
		
		private string _player_first_name;
		
		private string _player_last_name;
		
		private string _country_of_birth;
		
		private int _player_age;
		
		private int _goals_scored;
		
		private int _assists_made;
		
		private int _player_number;
		
		private string _player_team;
		
		private int _matches_played;
		
		private string _position_on_field;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplayer_idChanging(int value);
    partial void Onplayer_idChanged();
    partial void Onplayer_first_nameChanging(string value);
    partial void Onplayer_first_nameChanged();
    partial void Onplayer_last_nameChanging(string value);
    partial void Onplayer_last_nameChanged();
    partial void Oncountry_of_birthChanging(string value);
    partial void Oncountry_of_birthChanged();
    partial void Onplayer_ageChanging(int value);
    partial void Onplayer_ageChanged();
    partial void Ongoals_scoredChanging(int value);
    partial void Ongoals_scoredChanged();
    partial void Onassists_madeChanging(int value);
    partial void Onassists_madeChanged();
    partial void Onplayer_numberChanging(int value);
    partial void Onplayer_numberChanged();
    partial void Onplayer_teamChanging(string value);
    partial void Onplayer_teamChanged();
    partial void Onmatches_playedChanging(int value);
    partial void Onmatches_playedChanged();
    partial void Onposition_on_fieldChanging(string value);
    partial void Onposition_on_fieldChanged();
    #endregion
		
		public players_statistic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int player_id
		{
			get
			{
				return this._player_id;
			}
			set
			{
				if ((this._player_id != value))
				{
					this.Onplayer_idChanging(value);
					this.SendPropertyChanging();
					this._player_id = value;
					this.SendPropertyChanged("player_id");
					this.Onplayer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_first_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string player_first_name
		{
			get
			{
				return this._player_first_name;
			}
			set
			{
				if ((this._player_first_name != value))
				{
					this.Onplayer_first_nameChanging(value);
					this.SendPropertyChanging();
					this._player_first_name = value;
					this.SendPropertyChanged("player_first_name");
					this.Onplayer_first_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_last_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string player_last_name
		{
			get
			{
				return this._player_last_name;
			}
			set
			{
				if ((this._player_last_name != value))
				{
					this.Onplayer_last_nameChanging(value);
					this.SendPropertyChanging();
					this._player_last_name = value;
					this.SendPropertyChanged("player_last_name");
					this.Onplayer_last_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country_of_birth", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string country_of_birth
		{
			get
			{
				return this._country_of_birth;
			}
			set
			{
				if ((this._country_of_birth != value))
				{
					this.Oncountry_of_birthChanging(value);
					this.SendPropertyChanging();
					this._country_of_birth = value;
					this.SendPropertyChanged("country_of_birth");
					this.Oncountry_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_age", DbType="Int NOT NULL")]
		public int player_age
		{
			get
			{
				return this._player_age;
			}
			set
			{
				if ((this._player_age != value))
				{
					this.Onplayer_ageChanging(value);
					this.SendPropertyChanging();
					this._player_age = value;
					this.SendPropertyChanged("player_age");
					this.Onplayer_ageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goals_scored", DbType="Int NOT NULL")]
		public int goals_scored
		{
			get
			{
				return this._goals_scored;
			}
			set
			{
				if ((this._goals_scored != value))
				{
					this.Ongoals_scoredChanging(value);
					this.SendPropertyChanging();
					this._goals_scored = value;
					this.SendPropertyChanged("goals_scored");
					this.Ongoals_scoredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assists_made", DbType="Int NOT NULL")]
		public int assists_made
		{
			get
			{
				return this._assists_made;
			}
			set
			{
				if ((this._assists_made != value))
				{
					this.Onassists_madeChanging(value);
					this.SendPropertyChanging();
					this._assists_made = value;
					this.SendPropertyChanged("assists_made");
					this.Onassists_madeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_number", DbType="Int NOT NULL")]
		public int player_number
		{
			get
			{
				return this._player_number;
			}
			set
			{
				if ((this._player_number != value))
				{
					this.Onplayer_numberChanging(value);
					this.SendPropertyChanging();
					this._player_number = value;
					this.SendPropertyChanged("player_number");
					this.Onplayer_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_player_team", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string player_team
		{
			get
			{
				return this._player_team;
			}
			set
			{
				if ((this._player_team != value))
				{
					this.Onplayer_teamChanging(value);
					this.SendPropertyChanging();
					this._player_team = value;
					this.SendPropertyChanged("player_team");
					this.Onplayer_teamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matches_played", DbType="Int NOT NULL")]
		public int matches_played
		{
			get
			{
				return this._matches_played;
			}
			set
			{
				if ((this._matches_played != value))
				{
					this.Onmatches_playedChanging(value);
					this.SendPropertyChanging();
					this._matches_played = value;
					this.SendPropertyChanged("matches_played");
					this.Onmatches_playedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position_on_field", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string position_on_field
		{
			get
			{
				return this._position_on_field;
			}
			set
			{
				if ((this._position_on_field != value))
				{
					this.Onposition_on_fieldChanging(value);
					this.SendPropertyChanging();
					this._position_on_field = value;
					this.SendPropertyChanged("position_on_field");
					this.Onposition_on_fieldChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
